package io.github.kildot.backgroundRemover;

import java.awt.Color;
import java.awt.Desktop;
import java.awt.EventQueue;
import java.awt.SecondaryLoop;
import java.awt.Toolkit;
import java.net.URI;
import java.security.AccessController;
import java.security.PrivilegedAction;
import java.util.TimerTask;
import javax.accessibility.Accessible;
import javax.accessibility.AccessibleContext;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.JToggleButton;


public class Window extends javax.swing.JFrame implements Params.Listener {

    private DefaultComboBoxModel<String> presetsModel = new DefaultComboBoxModel<>();
    private Params localParams = new Params();
    private Params globalParams;
    private Params presetParams = Params.loadPreset(Common.MRU_PARAMS);
    private String presetName = Common.NEW_PARAMS;
    private SecondaryLoop secondaryLoop;
    private boolean canceled = false;
    
    private static Color defaultTextBackgroundColor = null;

    
    public Window(Params globalParams) {
        this.globalParams = globalParams;
        globalParams.addListener(this);
        initComponents();
        loadPresets();
        defaultTextBackgroundColor = pointRadiusText.getBackground();
        setInteractiveVisible(false);
        parametersChanged(0xFFFFFFFFFFFFFFFFL, false);
    }

    private void loadPresets() {
        String selected = presetName;
        presetsModel.removeAllElements();
        presetsModel.addElement(Common.NEW_PARAMS);
        boolean exists = false;
        for (String name : Params.listPresets()) {
            presetsModel.addElement(name);
            exists = exists || selected.equals(name);
        }
        if (!exists) {
            presetName = Common.NEW_PARAMS;
        } else {
            presetName = selected;
        }
        presetsModel.setSelectedItem(presetName);
        updatePresetButtons();
    }
    
    private void updatePresetButtons() {
        saveButton.setEnabled(
            !presetName.equals(Common.MRU_PARAMS)
            && (
                presetName.equals(Common.NEW_PARAMS)
                || !presetParams.equal(localParams, true)
            ));
        deleteButton.setEnabled(
            !presetName.equals(Common.MRU_PARAMS)
            && !presetName.equals(Common.NEW_PARAMS)
            );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scopeGroup = new javax.swing.ButtonGroup();
        originalSlicesGroup = new javax.swing.ButtonGroup();
        saveButton2 = new javax.swing.JButton();
        DisplayRangeGroup = new javax.swing.ButtonGroup();
        selectionTypeGroup = new javax.swing.ButtonGroup();
        saveButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        labelParamW = new javax.swing.JLabel();
        windowRadiusText = new javax.swing.JTextField();
        pointRadiusText = new javax.swing.JTextField();
        labelParamW1 = new javax.swing.JLabel();
        backgroundStartRadiusText = new javax.swing.JTextField();
        labelParamW2 = new javax.swing.JLabel();
        displayRangeResetTrueRadio = new javax.swing.JRadioButton();
        labelTakePixels3 = new javax.swing.JLabel();
        displayRangeResetFalseRadio = new javax.swing.JRadioButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelParamW3 = new javax.swing.JLabel();
        slopeText = new javax.swing.JTextField();
        yInterceptText = new javax.swing.JTextField();
        labelParamW4 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        labelParamW5 = new javax.swing.JLabel();
        labelParamW6 = new javax.swing.JLabel();
        pointOutputBox = new javax.swing.JComboBox<>();
        bgOutputBox = new javax.swing.JComboBox<>();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        skipPixelsText = new javax.swing.JTextField();
        helpSkipPixels = new javax.swing.JButton();
        labelSkipPixels = new javax.swing.JLabel();
        takePixelsText = new javax.swing.JTextField();
        helpTakePixels = new javax.swing.JButton();
        allSlicesFalseRadio = new javax.swing.JRadioButton();
        labelTakePixels1 = new javax.swing.JLabel();
        allSlicesTrueRadio = new javax.swing.JRadioButton();
        addInputSlicesTrueRadio = new javax.swing.JRadioButton();
        labelTakePixels2 = new javax.swing.JLabel();
        addInputSlicesFalseRadio = new javax.swing.JRadioButton();
        labelTakePixels = new javax.swing.JLabel();
        helpTakePixels1 = new javax.swing.JButton();
        helpTakePixels2 = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        presetsComboBox = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        pointsSelection = new javax.swing.JToggleButton();
        noiseSelection = new javax.swing.JToggleButton();
        helpPointsNoiseSelection = new javax.swing.JButton();
        helpProfile = new javax.swing.JButton();
        interactiveButton = new javax.swing.JToggleButton();
        profileWindowButton = new javax.swing.JToggleButton();

        saveButton2.setText("Copy to clipboard");

        saveButton3.setText("Paste from clipboard");

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Parameters");
        setMinimumSize(new java.awt.Dimension(480, 100));
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Preliminary parameters"));
        jPanel1.setName("nnn"); // NOI18N

        labelParamW.setText("Scanning window radius [pixels]");

        windowRadiusText.setText("20");
        windowRadiusText.setMinimumSize(new java.awt.Dimension(200, 24));
        windowRadiusText.setName(""); // NOI18N
        windowRadiusText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        windowRadiusText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        pointRadiusText.setText("5");
        pointRadiusText.setMinimumSize(new java.awt.Dimension(200, 24));
        pointRadiusText.setName(""); // NOI18N
        pointRadiusText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        pointRadiusText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        labelParamW1.setText("Point radius [pixels]");

        backgroundStartRadiusText.setText("6");
        backgroundStartRadiusText.setMinimumSize(new java.awt.Dimension(200, 24));
        backgroundStartRadiusText.setName(""); // NOI18N
        backgroundStartRadiusText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        backgroundStartRadiusText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        labelParamW2.setText("Background start radius [pixels]");

        DisplayRangeGroup.add(displayRangeResetTrueRadio);
        displayRangeResetTrueRadio.setText("Reset");
        displayRangeResetTrueRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        labelTakePixels3.setText("Display range");

        DisplayRangeGroup.add(displayRangeResetFalseRadio);
        displayRangeResetFalseRadio.setSelected(true);
        displayRangeResetFalseRadio.setText("Keep");
        displayRangeResetFalseRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelParamW2)
                    .addComponent(labelParamW1)
                    .addComponent(labelParamW)
                    .addComponent(labelTakePixels3))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pointRadiusText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(windowRadiusText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(displayRangeResetFalseRadio)
                        .addGap(18, 18, 18)
                        .addComponent(displayRangeResetTrueRadio)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(backgroundStartRadiusText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton6)
                        .addComponent(jButton11, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jButton5))
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(windowRadiusText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelParamW))
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pointRadiusText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelParamW1))
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(backgroundStartRadiusText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelParamW2))
                    .addComponent(jButton6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(displayRangeResetFalseRadio)
                        .addComponent(displayRangeResetTrueRadio)
                        .addComponent(labelTakePixels3))
                    .addComponent(jButton11))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        windowRadiusText.getAccessibleContext().setAccessibleDescription("windowRadius");
        pointRadiusText.getAccessibleContext().setAccessibleDescription("pointRadius");
        backgroundStartRadiusText.getAccessibleContext().setAccessibleDescription("backgroundStartRadius");
        displayRangeResetTrueRadio.getAccessibleContext().setAccessibleDescription("true:resetDisplayRange");
        displayRangeResetFalseRadio.getAccessibleContext().setAccessibleDescription("false:resetDisplayRange");
        jButton5.getAccessibleContext().setAccessibleDescription("scanning-window-radius");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Discrimination line parameters"));
        jPanel2.setName("nnn"); // NOI18N

        labelParamW3.setText("Slope");

        slopeText.setText("1");
        slopeText.setMinimumSize(new java.awt.Dimension(200, 24));
        slopeText.setName(""); // NOI18N
        slopeText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        slopeText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        yInterceptText.setText("200");
        yInterceptText.setMinimumSize(new java.awt.Dimension(200, 24));
        yInterceptText.setName(""); // NOI18N
        yInterceptText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        yInterceptText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        labelParamW4.setText("Y-intercept");

        jButton7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelParamW3)
                    .addComponent(labelParamW4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(slopeText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(yInterceptText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(slopeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelParamW3))
                    .addComponent(jButton7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(yInterceptText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelParamW4))
                    .addComponent(jButton8))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        slopeText.getAccessibleContext().setAccessibleDescription("slope");
        yInterceptText.getAccessibleContext().setAccessibleDescription("yIntercept");

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Output parameters"));
        jPanel3.setName("nnn"); // NOI18N

        labelParamW5.setText("Points");

        labelParamW6.setText("Background");

        pointOutputBox.setModel(new DefaultComboBoxModel<>(Params.POINT_OUTPUTS)
        );
        pointOutputBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        bgOutputBox.setModel(new DefaultComboBoxModel<>(Params.BG_OUTPUTS));
        bgOutputBox.setSelectedItem(Params.BG_OUTPUTS[Params.BG_OUTPUT_BLACK]);
        bgOutputBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        jButton9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        jButton10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        skipPixelsText.setText("1");
        skipPixelsText.setMinimumSize(new java.awt.Dimension(200, 24));
        skipPixelsText.setName(""); // NOI18N
        skipPixelsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        skipPixelsText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        helpSkipPixels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpSkipPixels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        labelSkipPixels.setText("Skip pixels");

        takePixelsText.setText("200");
        takePixelsText.setMinimumSize(new java.awt.Dimension(200, 24));
        takePixelsText.setName(""); // NOI18N
        takePixelsText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });
        takePixelsText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                keyVerifyEvent(evt);
            }
        });

        helpTakePixels.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpTakePixels.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        scopeGroup.add(allSlicesFalseRadio);
        allSlicesFalseRadio.setSelected(true);
        allSlicesFalseRadio.setText("Current slice");
        allSlicesFalseRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        labelTakePixels1.setText("Scope");

        scopeGroup.add(allSlicesTrueRadio);
        allSlicesTrueRadio.setText("All slices");
        allSlicesTrueRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        originalSlicesGroup.add(addInputSlicesTrueRadio);
        addInputSlicesTrueRadio.setText("Include");
        addInputSlicesTrueRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        labelTakePixels2.setText("Input slices");

        originalSlicesGroup.add(addInputSlicesFalseRadio);
        addInputSlicesFalseRadio.setSelected(true);
        addInputSlicesFalseRadio.setText("Omit");
        addInputSlicesFalseRadio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        labelTakePixels.setText("Take pixels");

        helpTakePixels1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpTakePixels1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        helpTakePixels2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpTakePixels2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelSkipPixels)
                    .addComponent(labelParamW6)
                    .addComponent(labelTakePixels1)
                    .addComponent(labelTakePixels2)
                    .addComponent(labelParamW5)
                    .addComponent(labelTakePixels))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(bgOutputBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pointOutputBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(allSlicesFalseRadio)
                                .addGap(18, 18, 18)
                                .addComponent(allSlicesTrueRadio))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(addInputSlicesFalseRadio)
                                .addGap(18, 18, 18)
                                .addComponent(addInputSlicesTrueRadio)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(skipPixelsText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(takePixelsText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpTakePixels2)
                    .addComponent(helpTakePixels1)
                    .addComponent(jButton10)
                    .addComponent(jButton9)
                    .addComponent(helpSkipPixels)
                    .addComponent(helpTakePixels))
                .addGap(6, 6, 6))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelParamW5)
                        .addComponent(pointOutputBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelParamW6)
                        .addComponent(bgOutputBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(skipPixelsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelSkipPixels))
                    .addComponent(helpSkipPixels))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(takePixelsText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(labelTakePixels))
                    .addComponent(helpTakePixels))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(allSlicesFalseRadio)
                        .addComponent(labelTakePixels1))
                    .addComponent(allSlicesTrueRadio)
                    .addComponent(helpTakePixels1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(addInputSlicesTrueRadio)
                        .addComponent(labelTakePixels2)
                        .addComponent(addInputSlicesFalseRadio))
                    .addComponent(helpTakePixels2))
                .addContainerGap())
        );

        pointOutputBox.getAccessibleContext().setAccessibleDescription("pointOutput");
        bgOutputBox.getAccessibleContext().setAccessibleDescription("bgOutput");
        skipPixelsText.getAccessibleContext().setAccessibleDescription("skipPixels");
        takePixelsText.getAccessibleContext().setAccessibleDescription("takePixels");
        allSlicesFalseRadio.getAccessibleContext().setAccessibleDescription("false:allSlices");
        allSlicesTrueRadio.getAccessibleContext().setAccessibleDescription("true:allSlices");
        addInputSlicesTrueRadio.getAccessibleContext().setAccessibleDescription("true:addInputSlices");
        addInputSlicesFalseRadio.getAccessibleContext().setAccessibleDescription("false:addInputSlices");

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        jPanel4.setBackground(javax.swing.UIManager.getDefaults().getColor("Button.disabledSelectedBackground"));
        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(
            javax.swing.border.BevelBorder.LOWERED
        ));

        jLabel2.setText("Presets:");

        presetsComboBox.setModel(presetsModel);
        presetsComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                presetsComboBoxActionPerformed(evt);
            }
        });

        saveButton.setText("Save");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(presetsComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(saveButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deleteButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(presetsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel2)
                        .addComponent(saveButton)
                        .addComponent(deleteButton))
                    .addComponent(jButton3))
                .addContainerGap())
        );

        jButton3.getAccessibleContext().setAccessibleDescription("presets");

        selectionTypeGroup.add(pointsSelection);
        pointsSelection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Point.png"))); // NOI18N
        pointsSelection.setSelected(true);
        pointsSelection.setText("Points selection");
        pointsSelection.setPreferredSize(new java.awt.Dimension(130, 29));
        pointsSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        selectionTypeGroup.add(noiseSelection);
        noiseSelection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Noise.png"))); // NOI18N
        noiseSelection.setText("Noise selection");
        noiseSelection.setPreferredSize(new java.awt.Dimension(130, 29));
        noiseSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        helpPointsNoiseSelection.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpPointsNoiseSelection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        helpProfile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Help.png"))); // NOI18N
        helpProfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                helpButtonActionPerformed(evt);
            }
        });

        interactiveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Tune.png"))); // NOI18N
        interactiveButton.setText("Interactive parameters tuning");
        interactiveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        profileWindowButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/io/github/kildot/backgroundRemover/res/Profile.png"))); // NOI18N
        profileWindowButton.setText("Profile plot window");
        profileWindowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                paramActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(interactiveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(profileWindowButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pointsSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(noiseSelection, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(helpPointsNoiseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpPointsNoiseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(pointsSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(noiseSelection, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(interactiveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(profileWindowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(helpProfile, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12))
        );

        pointsSelection.getAccessibleContext().setAccessibleDescription("false:selectNoise");
        noiseSelection.getAccessibleContext().setAccessibleDescription("true:selectNoise");
        helpPointsNoiseSelection.getAccessibleContext().setAccessibleDescription("points-and-noise-selection");
        interactiveButton.getAccessibleContext().setAccessibleDescription("interactive");
        profileWindowButton.getAccessibleContext().setAccessibleDescription("profileWindow");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void paramActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_paramActionPerformed
        if (evt.getSource() instanceof JTextField) {
            textParamUpdated(evt.getSource());
        } else if (evt.getSource() instanceof JToggleButton) {
            toggleParamUpdated(evt.getSource());
        } else if (evt.getSource() instanceof JComboBox) {
            comboBoxParamUpdated(evt.getSource());
        }
    }//GEN-LAST:event_paramActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        if (presetName.equals(Common.NEW_PARAMS)) {
            String newName = JOptionPane.showInputDialog(this, "New preset name:");
            if (newName == null || newName.trim().length() == 0) return;
            presetName = newName;
            presetParams.set(localParams, true, null);
            presetParams.storePreset(presetName);
            loadPresets();
        } else {
            presetParams.set(localParams, true, null);
            presetParams.storePreset(presetName);
            updatePresetButtons();
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if (presetName.equals(Common.NEW_PARAMS) || presetName.equals(Common.MRU_PARAMS)) {
            return;
        }
        Params.remove(presetName);
        loadPresets();
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        closeWindow(true);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        closeWindow(false);
    }//GEN-LAST:event_okButtonActionPerformed

    private void helpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpButtonActionPerformed
        try {
            if (!Desktop.isDesktopSupported()) return;
            if (!Desktop.getDesktop().isSupported(Desktop.Action.BROWSE)) return;
            Object source = evt.getSource();
            if (!(source instanceof Accessible)) return;
            AccessibleContext ctx = ((javax.accessibility.Accessible)source).getAccessibleContext();
            if (ctx == null) return;
            String desc = ctx.getAccessibleDescription();
            if (desc == null) return;
            Desktop.getDesktop().browse(new URI(Common.HELP_URL + "#" + desc));
        } catch (Exception ex) {}
    }//GEN-LAST:event_helpButtonActionPerformed

    private void keyVerifyEvent(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_keyVerifyEvent
        textParamUpdated(evt.getSource());
    }//GEN-LAST:event_keyVerifyEvent

    private void presetsComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_presetsComboBoxActionPerformed
        Object obj = presetsModel.getSelectedItem();
        presetName = obj != null && (obj instanceof String) ? (String)obj : Common.NEW_PARAMS;
        if (!presetName.equals(Common.NEW_PARAMS)) {
            presetParams = Params.loadPreset(presetName);
            globalParams.set(presetParams, true, null);
        }
        updatePresetButtons();
    }//GEN-LAST:event_presetsComboBoxActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        closeWindow(true);
    }//GEN-LAST:event_formWindowClosing

    // <editor-fold defaultstate="collapsed" desc="Variables declaration">                      
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup DisplayRangeGroup;
    private javax.swing.JRadioButton addInputSlicesFalseRadio;
    private javax.swing.JRadioButton addInputSlicesTrueRadio;
    private javax.swing.JRadioButton allSlicesFalseRadio;
    private javax.swing.JRadioButton allSlicesTrueRadio;
    private javax.swing.JTextField backgroundStartRadiusText;
    private javax.swing.JComboBox<String> bgOutputBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JRadioButton displayRangeResetFalseRadio;
    private javax.swing.JRadioButton displayRangeResetTrueRadio;
    private javax.swing.JButton helpPointsNoiseSelection;
    private javax.swing.JButton helpProfile;
    private javax.swing.JButton helpSkipPixels;
    private javax.swing.JButton helpTakePixels;
    private javax.swing.JButton helpTakePixels1;
    private javax.swing.JButton helpTakePixels2;
    private javax.swing.JToggleButton interactiveButton;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel labelParamW;
    private javax.swing.JLabel labelParamW1;
    private javax.swing.JLabel labelParamW2;
    private javax.swing.JLabel labelParamW3;
    private javax.swing.JLabel labelParamW4;
    private javax.swing.JLabel labelParamW5;
    private javax.swing.JLabel labelParamW6;
    private javax.swing.JLabel labelSkipPixels;
    private javax.swing.JLabel labelTakePixels;
    private javax.swing.JLabel labelTakePixels1;
    private javax.swing.JLabel labelTakePixels2;
    private javax.swing.JLabel labelTakePixels3;
    private javax.swing.JToggleButton noiseSelection;
    private javax.swing.JButton okButton;
    private javax.swing.ButtonGroup originalSlicesGroup;
    private javax.swing.JComboBox<String> pointOutputBox;
    private javax.swing.JTextField pointRadiusText;
    private javax.swing.JToggleButton pointsSelection;
    private javax.swing.JComboBox<String> presetsComboBox;
    private javax.swing.JToggleButton profileWindowButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JButton saveButton2;
    private javax.swing.JButton saveButton3;
    private javax.swing.ButtonGroup scopeGroup;
    private javax.swing.ButtonGroup selectionTypeGroup;
    private javax.swing.JTextField skipPixelsText;
    private javax.swing.JTextField slopeText;
    private javax.swing.JTextField takePixelsText;
    private javax.swing.JTextField windowRadiusText;
    private javax.swing.JTextField yInterceptText;
    // End of variables declaration//GEN-END:variables
    // </editor-fold>

    private void setSkipTakeVisible(boolean visible) {
        labelSkipPixels.setVisible(visible);
        labelTakePixels.setVisible(visible);
        helpSkipPixels.setVisible(visible);
        helpTakePixels.setVisible(visible);
        skipPixelsText.setVisible(visible);
        takePixelsText.setVisible(visible);
        this.pack();
    }

    private void setInteractiveVisible(boolean visible) {
        pointsSelection.setVisible(visible);
        noiseSelection.setVisible(visible);
        helpPointsNoiseSelection.setVisible(visible);
        profileWindowButton.setVisible(visible);
        helpProfile.setVisible(visible);
        interactiveButton.setVisible(!visible);
        this.pack();
    }
    
    @Override
    public final void parametersChanged(long fields, boolean self) {
        if ((fields & Params.POINT_OUTPUT) != 0) {
            setSkipTakeVisible(Params.isSkipTakePixelsNeeded(globalParams.pointOutput));
        }
        if ((fields & Params.INTERACTIVE) != 0) {
            setInteractiveVisible(globalParams.interactive);
        }
        if (self) return;
        localParams.set(globalParams, false, null);
        parameterChangedText(fields, Params.WINDOW_RADIUS, localParams.windowRadius, windowRadiusText);
        parameterChangedText(fields, Params.POINT_RADIUS, localParams.pointRadius, pointRadiusText);
        parameterChangedText(fields, Params.BACKGROUND_START_RADIUS, localParams.backgroundStartRadius, backgroundStartRadiusText);
        parameterChangedBoolRadio(fields, Params.RESET_DISPLAY_RANGE, localParams.resetDisplayRange, displayRangeResetFalseRadio, displayRangeResetTrueRadio);
        parameterChangedText(fields, Params.SLOPE, localParams.slope, slopeText);
        parameterChangedText(fields, Params.Y_INTERCEPT, localParams.yIntercept, yInterceptText);
        parameterChangedComboBox(fields, Params.POINT_OUTPUT, localParams.pointOutput, pointOutputBox);
        parameterChangedComboBox(fields, Params.BG_OUTPUT, localParams.bgOutput, bgOutputBox);
        parameterChangedText(fields, Params.SKIP_PIXELS, localParams.skipPixels, skipPixelsText);
        parameterChangedText(fields, Params.TAKE_PIXELS, localParams.takePixels, takePixelsText);
        parameterChangedBoolRadio(fields, Params.ALL_SLICES, localParams.allSlices, allSlicesFalseRadio, allSlicesTrueRadio);
        parameterChangedBoolRadio(fields, Params.ADD_INPUT_SLICES, localParams.addInputSlices, addInputSlicesFalseRadio, addInputSlicesTrueRadio);
        parameterChangedBoolRadio(fields, Params.SELECT_NOISE, localParams.selectNoise, pointsSelection, noiseSelection);
        parameterChangedToggle(fields, Params.INTERACTIVE, localParams.interactive, interactiveButton);
        parameterChangedToggle(fields, Params.PROFILE_WINDOW, localParams.profileWindow, profileWindowButton);
        updatePresetButtons();
    }
    
    private void parameterChangedText(long fields, long flag, int value, JTextField field) {
        if ((fields & flag) == 0) return;
        field.setText(Integer.toString(value));
        field.setBackground(defaultTextBackgroundColor);
    }
    
    private void parameterChangedText(long fields, long flag, double value, JTextField field) {
        if ((fields & flag) == 0) return;
        field.setText(Double.toString(value));
        field.setBackground(defaultTextBackgroundColor);
    }
    
    private void parameterChangedBoolRadio(long fields, long flag, boolean value, JToggleButton falseRadio, JToggleButton trueRadio) {
        if ((fields & flag) == 0) return;
        falseRadio.setSelected(!value);
        trueRadio.setSelected(value);
    }
    
    private void parameterChangedToggle(long fields, long flag, boolean value, JToggleButton button) {
        if ((fields & flag) == 0) return;
        button.setSelected(value);
    }

    private void parameterChangedComboBox(long fields, long flag, int value, JComboBox<String> box) {
        if ((fields & flag) == 0) return;
        box.setSelectedIndex(value);
    }
    
    private void textParamUpdated(Object obj) {
        JTextField field = (JTextField)obj;
        String paramName = field.getAccessibleContext().getAccessibleDescription();
        boolean valid = localParams.setParamString(paramName, field.getText());
        globalParamsUpdate(true);
        if (valid) {
            field.setBackground(defaultTextBackgroundColor);
        } else {
            field.setBackground(new Color(0xFFAA99));
        }
        updatePresetButtons();
    }
    
    private void toggleParamUpdated(Object obj) {
        JToggleButton button = (JToggleButton)obj;
        String desc = button.getAccessibleContext().getAccessibleDescription();
        boolean invert;
        String paramName;
        if (desc.startsWith("true:")) {
            invert = false;
            paramName = desc.substring(5);
        } else if (desc.startsWith("false:")) {
            invert = true;
            paramName = desc.substring(6);
        } else {
            invert = false;
            paramName = desc;
        }
        boolean value = button.isSelected();
        localParams.setParamBoolean(paramName, invert ? !value : value);
        globalParamsUpdate(false);
        updatePresetButtons();
    }
    
    private void comboBoxParamUpdated(Object obj) {
        JComboBox<String> box = (JComboBox<String>)obj;
        String paramName = box.getAccessibleContext().getAccessibleDescription();
        String paramValue = (String)box.getSelectedItem();
        localParams.setParamString(paramName, paramValue);
        globalParamsUpdate(false);
        updatePresetButtons();
    }
    
    private TimerTask globalParamsUpdateTask = null;
    private boolean globalParamsUpdatePostponed = true;

    private void globalParamsUpdate(boolean postpone) {
        if (globalParamsUpdateTask != null) {
            if (globalParamsUpdatePostponed) {
                globalParamsUpdateTask.cancel();
            } else {
                return;
            }
        }
        globalParamsUpdatePostponed = postpone;
        globalParamsUpdateTask = Common.invokeLater(() -> {
            globalParamsUpdateTask = null;
            globalParams.set(localParams, false, Window.this);
        }, postpone ? Common.PLOT_UPDATE_DELAY : 0);
    }

    public void showBlocking() {
        setVisible(true);
        try {
            canceled = true;
            final EventQueue eventQueue = AccessController.doPrivileged(
                    (PrivilegedAction<EventQueue>) () -> Toolkit.getDefaultToolkit().getSystemEventQueue()
            );
            secondaryLoop = eventQueue.createSecondaryLoop();
            secondaryLoop.enter();
            secondaryLoop = null;
        } finally {
            setVisible(false);
        }
    }
    
    public boolean wasCanceled() {
        return canceled;
    }

    private void closeWindow(boolean canceled) {
        globalParams.set(localParams, false, this);
        this.canceled = canceled;
        setVisible(false);
        if (secondaryLoop != null) {
            secondaryLoop.exit();
        }
    }

}
